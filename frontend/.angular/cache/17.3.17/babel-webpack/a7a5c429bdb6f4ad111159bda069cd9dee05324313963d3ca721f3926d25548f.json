{"ast":null,"code":"import _asyncToGenerator from \"C:/_dev/cosmic-games/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/game-api.service\";\nimport * as i3 from \"@angular/common\";\nfunction HomeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"div\", 19)(3, \"h3\", 20);\n    i0.ɵɵtext(4, \"\\uD83C\\uDFAE Active Game Session Found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 11);\n    i0.ɵɵtext(6, \" Room: \");\n    i0.ɵɵelementStart(7, \"span\", 21);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" \\u2022 Player: \");\n    i0.ɵɵelementStart(10, \"span\", 22);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"p\", 23);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 24)(15, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_1_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.rejoinSession());\n    });\n    i0.ɵɵtext(16, \" \\uD83D\\uDEAA Rejoin Game \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_1_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.clearSession());\n    });\n    i0.ɵɵtext(18, \" \\u274C Clear \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.activeSession.roomCode);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.activeSession.playerName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Session from \", ctx_r1.formatSessionTime(ctx_r1.activeSession.timestamp), \" \");\n  }\n}\nexport class HomeComponent {\n  constructor(router, gameApiService) {\n    this.router = router;\n    this.gameApiService = gameApiService;\n    this.activeSession = null;\n  }\n  ngOnInit() {\n    this.checkForActiveSession();\n  }\n  checkForActiveSession() {\n    try {\n      const roomCode = localStorage.getItem('activeRoomCode');\n      const playerName = localStorage.getItem('currentPlayerName');\n      const timestampStr = localStorage.getItem('sessionTimestamp');\n      if (roomCode && playerName && timestampStr) {\n        const timestamp = parseInt(timestampStr);\n        const now = Date.now();\n        const sessionAge = now - timestamp;\n        // Check room composition to determine session timeout\n        this.validateSessionWithRoomCheck(roomCode, playerName, timestamp, sessionAge);\n      }\n    } catch (error) {\n      console.error('Error checking for active session:', error);\n    }\n  }\n  validateSessionWithRoomCheck(roomCode, playerName, timestamp, sessionAge) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Try to get room data to check player composition\n        const roomResponse = yield _this.gameApiService.getRoomData(roomCode).toPromise();\n        if (roomResponse?.success && roomResponse.data) {\n          const room = roomResponse.data;\n          const humanPlayers = room.players.filter(p => !p.isAI);\n          const isOnlyAIPlayersLeft = humanPlayers.length <= 1; // Only this player or less\n          // Different timeouts based on room composition\n          const timeoutMs = isOnlyAIPlayersLeft ? 5 * 60 * 1000 // 5 minutes for AI-only rooms\n          : 4 * 60 * 60 * 1000; // 4 hours for rooms with human players\n          if (sessionAge < timeoutMs) {\n            _this.activeSession = {\n              roomCode,\n              playerName,\n              timestamp\n            };\n          } else {\n            // Session expired based on room composition\n            console.log(`Session expired: ${isOnlyAIPlayersLeft ? '5min timeout (AI only)' : '4h timeout (human players)'}`);\n            _this.clearSessionData();\n          }\n        } else {\n          // Room doesn't exist anymore, clear session\n          console.log('Room no longer exists, clearing session');\n          _this.clearSessionData();\n        }\n      } catch (error) {\n        // If we can't check the room (network error, etc.), fall back to basic time check\n        console.warn('Could not validate room composition, using fallback timeout:', error);\n        // Use conservative 4-hour timeout as fallback\n        if (sessionAge < 4 * 60 * 60 * 1000) {\n          _this.activeSession = {\n            roomCode,\n            playerName,\n            timestamp\n          };\n        } else {\n          _this.clearSessionData();\n        }\n      }\n    })();\n  }\n  rejoinSession() {\n    if (this.activeSession) {\n      this.router.navigate(['/room', this.activeSession.roomCode]);\n    }\n  }\n  clearSession() {\n    this.clearSessionData();\n    this.activeSession = null;\n  }\n  clearSessionData() {\n    localStorage.removeItem('activeRoomCode');\n    localStorage.removeItem('sessionTimestamp');\n  }\n  formatSessionTime(timestamp) {\n    const now = Date.now();\n    const diff = now - timestamp;\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(minutes / 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes % 60}m ago`;\n    } else {\n      return `${minutes}m ago`;\n    }\n  }\n  createRoom() {\n    this.router.navigate(['/create-room']);\n  }\n  joinRoom() {\n    this.router.navigate(['/join-room']);\n  }\n  static {\n    this.ɵfac = function HomeComponent_Factory(t) {\n      return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.GameApiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomeComponent,\n      selectors: [[\"app-home\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 62,\n      vars: 1,\n      consts: [[1, \"max-w-4xl\", \"mx-auto\", \"text-center\"], [\"class\", \"casino-panel mb-8 bg-green-900/30 border-green-500\", 4, \"ngIf\"], [1, \"casino-panel\", \"mb-12\"], [1, \"text-5xl\", \"font-bold\", \"text-gold\", \"mb-4\", \"text-glow\"], [1, \"text-xl\", \"text-casino-silver\", \"mb-8\"], [1, \"grid\", \"md:grid-cols-2\", \"gap-6\", \"max-w-2xl\", \"mx-auto\"], [1, \"casino-button\", \"text-lg\", \"py-4\", 3, \"click\"], [1, \"grid\", \"md:grid-cols-3\", \"gap-8\", \"mb-12\"], [1, \"casino-panel\", \"text-center\"], [1, \"text-4xl\", \"mb-4\"], [1, \"text-xl\", \"font-bold\", \"text-gold\", \"mb-2\"], [1, \"text-casino-silver\"], [1, \"casino-panel\"], [1, \"text-3xl\", \"font-bold\", \"text-gold\", \"mb-6\"], [1, \"grid\", \"md:grid-cols-2\", \"gap-8\", \"text-left\"], [1, \"text-xl\", \"font-bold\", \"text-casino-silver\", \"mb-3\"], [1, \"space-y-2\", \"text-casino-silver/80\"], [1, \"casino-panel\", \"mb-8\", \"bg-green-900/30\", \"border-green-500\"], [1, \"flex\", \"items-center\", \"justify-between\"], [1, \"text-left\"], [1, \"text-xl\", \"font-bold\", \"text-green-400\", \"mb-2\"], [1, \"text-gold\", \"font-mono\"], [1, \"text-gold\"], [1, \"text-sm\", \"text-gray-400\", \"mt-1\"], [1, \"flex\", \"gap-2\"], [1, \"casino-button\", \"bg-green-600\", \"hover:bg-green-700\", 3, \"click\"], [1, \"casino-button\", \"bg-red-600\", \"hover:bg-red-700\", 3, \"click\"]],\n      template: function HomeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, HomeComponent_div_1_Template, 19, 3, \"div\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \" Welcome to Cosmic Games \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 4);\n          i0.ɵɵtext(6, \" Premium multiplayer card games with friends and AI opponents \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_8_listener() {\n            return ctx.createRoom();\n          });\n          i0.ɵɵtext(9, \" \\uD83C\\uDFAE Create New Room \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_10_listener() {\n            return ctx.joinRoom();\n          });\n          i0.ɵɵtext(11, \" \\uD83D\\uDEAA Join Existing Room \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 8)(14, \"div\", 9);\n          i0.ɵɵtext(15, \"\\uD83C\\uDCCF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"h3\", 10);\n          i0.ɵɵtext(17, \"Gin Rummy\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"p\", 11);\n          i0.ɵɵtext(19, \" Classic card game with modern multiplayer features \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 8)(21, \"div\", 9);\n          i0.ɵɵtext(22, \"\\uD83E\\uDD16\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"h3\", 10);\n          i0.ɵɵtext(24, \"AI Opponents\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"p\", 11);\n          i0.ɵɵtext(26, \" Challenge smart AI players with different difficulty levels \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 8)(28, \"div\", 9);\n          i0.ɵɵtext(29, \"\\uD83D\\uDC65\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"h3\", 10);\n          i0.ɵɵtext(31, \"Multiplayer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"p\", 11);\n          i0.ɵɵtext(33, \" Play with 2-6 players in private rooms \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(34, \"div\", 12)(35, \"h2\", 13);\n          i0.ɵɵtext(36, \"How to Play\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"div\", 14)(38, \"div\")(39, \"h3\", 15);\n          i0.ɵɵtext(40, \"Create a Room\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"ul\", 16)(42, \"li\");\n          i0.ɵɵtext(43, \"\\u2022 Click \\\"Create New Room\\\"\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"li\");\n          i0.ɵɵtext(45, \"\\u2022 Set your room name and preferences\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"li\");\n          i0.ɵɵtext(47, \"\\u2022 Share the 6-digit room code with friends\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"li\");\n          i0.ɵɵtext(49, \"\\u2022 Add AI players if needed\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(50, \"div\")(51, \"h3\", 15);\n          i0.ɵɵtext(52, \"Join a Game\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(53, \"ul\", 16)(54, \"li\");\n          i0.ɵɵtext(55, \"\\u2022 Click \\\"Join Existing Room\\\"\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"li\");\n          i0.ɵɵtext(57, \"\\u2022 Enter the 6-digit room code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(58, \"li\");\n          i0.ɵɵtext(59, \"\\u2022 Wait for other players to join\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(60, \"li\");\n          i0.ɵɵtext(61, \"\\u2022 Start playing when everyone is ready\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.activeSession);\n        }\n      },\n      dependencies: [CommonModule, i3.NgIf],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HomeComponent_div_1_Template_button_click_15_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","rejoinSession","HomeComponent_div_1_Template_button_click_17_listener","clearSession","ɵɵadvance","ɵɵtextInterpolate","activeSession","roomCode","playerName","ɵɵtextInterpolate1","formatSessionTime","timestamp","HomeComponent","constructor","router","gameApiService","ngOnInit","checkForActiveSession","localStorage","getItem","timestampStr","parseInt","now","Date","sessionAge","validateSessionWithRoomCheck","error","console","_this","_asyncToGenerator","roomResponse","getRoomData","toPromise","success","data","room","humanPlayers","players","filter","p","isAI","isOnlyAIPlayersLeft","length","timeoutMs","log","clearSessionData","warn","navigate","removeItem","diff","minutes","Math","floor","hours","createRoom","joinRoom","ɵɵdirectiveInject","i1","Router","i2","GameApiService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵtemplate","HomeComponent_div_1_Template","HomeComponent_Template_button_click_8_listener","HomeComponent_Template_button_click_10_listener","ɵɵproperty","i3","NgIf","encapsulation"],"sources":["C:\\_dev\\cosmic-games\\frontend\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GameApiService } from '../../services/game-api.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"max-w-4xl mx-auto text-center\">\r\n      <!-- Active Session Alert -->\r\n      <div *ngIf=\"activeSession\" class=\"casino-panel mb-8 bg-green-900/30 border-green-500\">\r\n        <div class=\"flex items-center justify-between\">\r\n          <div class=\"text-left\">\r\n            <h3 class=\"text-xl font-bold text-green-400 mb-2\">🎮 Active Game Session Found</h3>\r\n            <p class=\"text-casino-silver\">\r\n              Room: <span class=\"text-gold font-mono\">{{ activeSession.roomCode }}</span> • \r\n              Player: <span class=\"text-gold\">{{ activeSession.playerName }}</span>\r\n            </p>\r\n            <p class=\"text-sm text-gray-400 mt-1\">\r\n              Session from {{ formatSessionTime(activeSession.timestamp) }}\r\n            </p>\r\n          </div>\r\n          <div class=\"flex gap-2\">\r\n            <button \r\n              (click)=\"rejoinSession()\" \r\n              class=\"casino-button bg-green-600 hover:bg-green-700\">\r\n              🚪 Rejoin Game\r\n            </button>\r\n            <button \r\n              (click)=\"clearSession()\" \r\n              class=\"casino-button bg-red-600 hover:bg-red-700\">\r\n              ❌ Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Hero Section -->\r\n      <div class=\"casino-panel mb-12\">\r\n        <h1 class=\"text-5xl font-bold text-gold mb-4 text-glow\">\r\n          Welcome to Cosmic Games\r\n        </h1>\r\n        <p class=\"text-xl text-casino-silver mb-8\">\r\n          Premium multiplayer card games with friends and AI opponents\r\n        </p>\r\n        \r\n        <div class=\"grid md:grid-cols-2 gap-6 max-w-2xl mx-auto\">\r\n          <button \r\n            (click)=\"createRoom()\" \r\n            class=\"casino-button text-lg py-4\">\r\n            🎮 Create New Room\r\n          </button>\r\n          \r\n          <button \r\n            (click)=\"joinRoom()\" \r\n            class=\"casino-button text-lg py-4\">\r\n            🚪 Join Existing Room\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Game Features -->\r\n      <div class=\"grid md:grid-cols-3 gap-8 mb-12\">\r\n        <div class=\"casino-panel text-center\">\r\n          <div class=\"text-4xl mb-4\">🃏</div>\r\n          <h3 class=\"text-xl font-bold text-gold mb-2\">Gin Rummy</h3>\r\n          <p class=\"text-casino-silver\">\r\n            Classic card game with modern multiplayer features\r\n          </p>\r\n        </div>\r\n        \r\n        <div class=\"casino-panel text-center\">\r\n          <div class=\"text-4xl mb-4\">🤖</div>\r\n          <h3 class=\"text-xl font-bold text-gold mb-2\">AI Opponents</h3>\r\n          <p class=\"text-casino-silver\">\r\n            Challenge smart AI players with different difficulty levels\r\n          </p>\r\n        </div>\r\n        \r\n        <div class=\"casino-panel text-center\">\r\n          <div class=\"text-4xl mb-4\">👥</div>\r\n          <h3 class=\"text-xl font-bold text-gold mb-2\">Multiplayer</h3>\r\n          <p class=\"text-casino-silver\">\r\n            Play with 2-6 players in private rooms\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- How to Play -->\r\n      <div class=\"casino-panel\">\r\n        <h2 class=\"text-3xl font-bold text-gold mb-6\">How to Play</h2>\r\n        <div class=\"grid md:grid-cols-2 gap-8 text-left\">\r\n          <div>\r\n            <h3 class=\"text-xl font-bold text-casino-silver mb-3\">Create a Room</h3>\r\n            <ul class=\"space-y-2 text-casino-silver/80\">\r\n              <li>• Click \"Create New Room\"</li>\r\n              <li>• Set your room name and preferences</li>\r\n              <li>• Share the 6-digit room code with friends</li>\r\n              <li>• Add AI players if needed</li>\r\n            </ul>\r\n          </div>\r\n          \r\n          <div>\r\n            <h3 class=\"text-xl font-bold text-casino-silver mb-3\">Join a Game</h3>\r\n            <ul class=\"space-y-2 text-casino-silver/80\">\r\n              <li>• Click \"Join Existing Room\"</li>\r\n              <li>• Enter the 6-digit room code</li>\r\n              <li>• Wait for other players to join</li>\r\n              <li>• Start playing when everyone is ready</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  activeSession: {\r\n    roomCode: string;\r\n    playerName: string;\r\n    timestamp: number;\r\n  } | null = null;\r\n\r\n  constructor(private router: Router, private gameApiService: GameApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.checkForActiveSession();\r\n  }\r\n\r\n  private checkForActiveSession() {\r\n    try {\r\n      const roomCode = localStorage.getItem('activeRoomCode');\r\n      const playerName = localStorage.getItem('currentPlayerName');\r\n      const timestampStr = localStorage.getItem('sessionTimestamp');\r\n      \r\n      if (roomCode && playerName && timestampStr) {\r\n        const timestamp = parseInt(timestampStr);\r\n        const now = Date.now();\r\n        const sessionAge = now - timestamp;\r\n        \r\n        // Check room composition to determine session timeout\r\n        this.validateSessionWithRoomCheck(roomCode, playerName, timestamp, sessionAge);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking for active session:', error);\r\n    }\r\n  }\r\n\r\n  private async validateSessionWithRoomCheck(roomCode: string, playerName: string, timestamp: number, sessionAge: number) {\r\n    try {\r\n      // Try to get room data to check player composition\r\n      const roomResponse = await this.gameApiService.getRoomData(roomCode).toPromise();\r\n      \r\n      if (roomResponse?.success && roomResponse.data) {\r\n        const room = roomResponse.data;\r\n        const humanPlayers = room.players.filter(p => !p.isAI);\r\n        const isOnlyAIPlayersLeft = humanPlayers.length <= 1; // Only this player or less\r\n        \r\n        // Different timeouts based on room composition\r\n        const timeoutMs = isOnlyAIPlayersLeft \r\n          ? 5 * 60 * 1000  // 5 minutes for AI-only rooms\r\n          : 4 * 60 * 60 * 1000; // 4 hours for rooms with human players\r\n        \r\n        if (sessionAge < timeoutMs) {\r\n          this.activeSession = {\r\n            roomCode,\r\n            playerName,\r\n            timestamp\r\n          };\r\n        } else {\r\n          // Session expired based on room composition\r\n          console.log(`Session expired: ${isOnlyAIPlayersLeft ? '5min timeout (AI only)' : '4h timeout (human players)'}`);\r\n          this.clearSessionData();\r\n        }\r\n      } else {\r\n        // Room doesn't exist anymore, clear session\r\n        console.log('Room no longer exists, clearing session');\r\n        this.clearSessionData();\r\n      }\r\n    } catch (error) {\r\n      // If we can't check the room (network error, etc.), fall back to basic time check\r\n      console.warn('Could not validate room composition, using fallback timeout:', error);\r\n      \r\n      // Use conservative 4-hour timeout as fallback\r\n      if (sessionAge < 4 * 60 * 60 * 1000) {\r\n        this.activeSession = {\r\n          roomCode,\r\n          playerName,\r\n          timestamp\r\n        };\r\n      } else {\r\n        this.clearSessionData();\r\n      }\r\n    }\r\n  }\r\n\r\n  rejoinSession() {\r\n    if (this.activeSession) {\r\n      this.router.navigate(['/room', this.activeSession.roomCode]);\r\n    }\r\n  }\r\n\r\n  clearSession() {\r\n    this.clearSessionData();\r\n    this.activeSession = null;\r\n  }\r\n\r\n  private clearSessionData() {\r\n    localStorage.removeItem('activeRoomCode');\r\n    localStorage.removeItem('sessionTimestamp');\r\n  }\r\n\r\n  formatSessionTime(timestamp: number): string {\r\n    const now = Date.now();\r\n    const diff = now - timestamp;\r\n    const minutes = Math.floor(diff / (1000 * 60));\r\n    const hours = Math.floor(minutes / 60);\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes % 60}m ago`;\r\n    } else {\r\n      return `${minutes}m ago`;\r\n    }\r\n  }\r\n\r\n  createRoom() {\r\n    this.router.navigate(['/create-room']);\r\n  }\r\n\r\n  joinRoom() {\r\n    this.router.navigate(['/join-room']);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}