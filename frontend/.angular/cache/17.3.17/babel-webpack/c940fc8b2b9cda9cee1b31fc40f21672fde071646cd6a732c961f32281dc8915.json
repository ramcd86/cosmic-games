{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/game-api.service\";\nimport * as i3 from \"@angular/common\";\nfunction HomeComponent_div_1_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 29);\n    i0.ɵɵtext(1, \"\\u2022 5min timeout (AI only)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_1_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1, \"\\u2022 4h timeout (multiplayer)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"div\", 19)(3, \"h3\", 20);\n    i0.ɵɵtext(4, \"\\uD83C\\uDFAE Active Game Session Found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 11);\n    i0.ɵɵtext(6, \" Room: \");\n    i0.ɵɵelementStart(7, \"span\", 21);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" \\u2022 Player: \");\n    i0.ɵɵelementStart(10, \"span\", 22);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"p\", 23);\n    i0.ɵɵtext(13);\n    i0.ɵɵtemplate(14, HomeComponent_div_1_span_14_Template, 2, 0, \"span\", 24)(15, HomeComponent_div_1_span_15_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 26)(17, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_1_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.rejoinSession());\n    });\n    i0.ɵɵtext(18, \" \\uD83D\\uDEAA Rejoin Game \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_1_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.clearSession());\n    });\n    i0.ɵɵtext(20, \" \\u274C Clear \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.activeSession.roomCode);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.activeSession.playerName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Session from \", ctx_r1.formatSessionTime(ctx_r1.activeSession.timestamp), \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.activeSession.isAIOnly);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.activeSession.isAIOnly);\n  }\n}\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(router, gameApiService) {\n      this.router = router;\n      this.gameApiService = gameApiService;\n      this.activeSession = null;\n    }\n    ngOnInit() {\n      this.checkForActiveSession();\n    }\n    checkForActiveSession() {\n      try {\n        const roomCode = localStorage.getItem('activeRoomCode');\n        const playerName = localStorage.getItem('currentPlayerName');\n        const timestampStr = localStorage.getItem('sessionTimestamp');\n        if (roomCode && playerName && timestampStr) {\n          const timestamp = parseInt(timestampStr);\n          const now = Date.now();\n          const sessionAge = now - timestamp;\n          // Check room composition to determine session timeout\n          this.validateSessionWithRoomCheck(roomCode, playerName, timestamp, sessionAge);\n        }\n      } catch (error) {\n        console.error('Error checking for active session:', error);\n      }\n    }\n    validateSessionWithRoomCheck(roomCode, playerName, timestamp, sessionAge) {\n      // Try to get room data to check player composition\n      this.gameApiService.getRoom(roomCode).subscribe({\n        next: roomResponse => {\n          if (roomResponse?.success && roomResponse.data) {\n            const room = roomResponse.data;\n            const humanPlayers = room.players.filter(p => !p.isAI);\n            const isOnlyAIPlayersLeft = humanPlayers.length <= 1; // Only this player or less\n            // Different timeouts based on room composition\n            const timeoutMs = isOnlyAIPlayersLeft ? 5 * 60 * 1000 // 5 minutes for AI-only rooms\n            : 4 * 60 * 60 * 1000; // 4 hours for rooms with human players\n            if (sessionAge < timeoutMs) {\n              this.activeSession = {\n                roomCode,\n                playerName,\n                timestamp,\n                isAIOnly: isOnlyAIPlayersLeft\n              };\n            } else {\n              // Session expired based on room composition\n              console.log(`Session expired: ${isOnlyAIPlayersLeft ? '5min timeout (AI only)' : '4h timeout (human players)'}`);\n              this.clearSessionData();\n            }\n          } else {\n            // Room doesn't exist anymore, clear session\n            console.log('Room no longer exists, clearing session');\n            this.clearSessionData();\n          }\n        },\n        error: error => {\n          // If we can't check the room (network error, etc.), fall back to cached info or basic time check\n          console.warn('Could not validate room composition, using fallback timeout:', error);\n          // Check if we have cached room composition info\n          const cachedIsAIOnly = localStorage.getItem('sessionIsAIOnly') === 'true';\n          const timeoutMs = cachedIsAIOnly ? 5 * 60 * 1000 // 5 minutes for AI-only rooms\n          : 4 * 60 * 60 * 1000; // 4 hours for rooms with human players\n          if (sessionAge < timeoutMs) {\n            this.activeSession = {\n              roomCode,\n              playerName,\n              timestamp,\n              isAIOnly: cachedIsAIOnly\n            };\n          } else {\n            this.clearSessionData();\n          }\n        }\n      });\n    }\n    rejoinSession() {\n      if (this.activeSession) {\n        this.router.navigate(['/room', this.activeSession.roomCode]);\n      }\n    }\n    clearSession() {\n      this.clearSessionData();\n      this.activeSession = null;\n    }\n    clearSessionData() {\n      localStorage.removeItem('activeRoomCode');\n      localStorage.removeItem('sessionTimestamp');\n      localStorage.removeItem('sessionIsAIOnly');\n    }\n    formatSessionTime(timestamp) {\n      const now = Date.now();\n      const diff = now - timestamp;\n      const minutes = Math.floor(diff / (1000 * 60));\n      const hours = Math.floor(minutes / 60);\n      if (hours > 0) {\n        return `${hours}h ${minutes % 60}m ago`;\n      } else {\n        return `${minutes}m ago`;\n      }\n    }\n    createRoom() {\n      this.router.navigate(['/create-room']);\n    }\n    joinRoom() {\n      this.router.navigate(['/join-room']);\n    }\n    static {\n      this.ɵfac = function HomeComponent_Factory(t) {\n        return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.GameApiService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: HomeComponent,\n        selectors: [[\"app-home\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 62,\n        vars: 1,\n        consts: [[1, \"max-w-4xl\", \"mx-auto\", \"text-center\"], [\"class\", \"casino-panel mb-8 bg-green-900/30 border-green-500\", 4, \"ngIf\"], [1, \"casino-panel\", \"mb-12\"], [1, \"text-5xl\", \"font-bold\", \"text-gold\", \"mb-4\", \"text-glow\"], [1, \"text-xl\", \"text-casino-silver\", \"mb-8\"], [1, \"grid\", \"md:grid-cols-2\", \"gap-6\", \"max-w-2xl\", \"mx-auto\"], [1, \"casino-button\", \"text-lg\", \"py-4\", 3, \"click\"], [1, \"grid\", \"md:grid-cols-3\", \"gap-8\", \"mb-12\"], [1, \"casino-panel\", \"text-center\"], [1, \"text-4xl\", \"mb-4\"], [1, \"text-xl\", \"font-bold\", \"text-gold\", \"mb-2\"], [1, \"text-casino-silver\"], [1, \"casino-panel\"], [1, \"text-3xl\", \"font-bold\", \"text-gold\", \"mb-6\"], [1, \"grid\", \"md:grid-cols-2\", \"gap-8\", \"text-left\"], [1, \"text-xl\", \"font-bold\", \"text-casino-silver\", \"mb-3\"], [1, \"space-y-2\", \"text-casino-silver/80\"], [1, \"casino-panel\", \"mb-8\", \"bg-green-900/30\", \"border-green-500\"], [1, \"flex\", \"items-center\", \"justify-between\"], [1, \"text-left\"], [1, \"text-xl\", \"font-bold\", \"text-green-400\", \"mb-2\"], [1, \"text-gold\", \"font-mono\"], [1, \"text-gold\"], [1, \"text-sm\", \"text-gray-400\", \"mt-1\"], [\"class\", \"text-yellow-400 ml-2\", 4, \"ngIf\"], [\"class\", \"text-blue-400 ml-2\", 4, \"ngIf\"], [1, \"flex\", \"gap-2\"], [1, \"casino-button\", \"bg-green-600\", \"hover:bg-green-700\", 3, \"click\"], [1, \"casino-button\", \"bg-red-600\", \"hover:bg-red-700\", 3, \"click\"], [1, \"text-yellow-400\", \"ml-2\"], [1, \"text-blue-400\", \"ml-2\"]],\n        template: function HomeComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, HomeComponent_div_1_Template, 21, 5, \"div\", 1);\n            i0.ɵɵelementStart(2, \"div\", 2)(3, \"h1\", 3);\n            i0.ɵɵtext(4, \" Welcome to Cosmic Games \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"p\", 4);\n            i0.ɵɵtext(6, \" Premium multiplayer card games with friends and AI opponents \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"button\", 6);\n            i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_8_listener() {\n              return ctx.createRoom();\n            });\n            i0.ɵɵtext(9, \" \\uD83C\\uDFAE Create New Room \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"button\", 6);\n            i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_10_listener() {\n              return ctx.joinRoom();\n            });\n            i0.ɵɵtext(11, \" \\uD83D\\uDEAA Join Existing Room \");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 8)(14, \"div\", 9);\n            i0.ɵɵtext(15, \"\\uD83C\\uDCCF\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"h3\", 10);\n            i0.ɵɵtext(17, \"Gin Rummy\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"p\", 11);\n            i0.ɵɵtext(19, \" Classic card game with modern multiplayer features \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(20, \"div\", 8)(21, \"div\", 9);\n            i0.ɵɵtext(22, \"\\uD83E\\uDD16\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"h3\", 10);\n            i0.ɵɵtext(24, \"AI Opponents\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"p\", 11);\n            i0.ɵɵtext(26, \" Challenge smart AI players with different difficulty levels \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(27, \"div\", 8)(28, \"div\", 9);\n            i0.ɵɵtext(29, \"\\uD83D\\uDC65\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"h3\", 10);\n            i0.ɵɵtext(31, \"Multiplayer\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"p\", 11);\n            i0.ɵɵtext(33, \" Play with 2-6 players in private rooms \");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(34, \"div\", 12)(35, \"h2\", 13);\n            i0.ɵɵtext(36, \"How to Play\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"div\", 14)(38, \"div\")(39, \"h3\", 15);\n            i0.ɵɵtext(40, \"Create a Room\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(41, \"ul\", 16)(42, \"li\");\n            i0.ɵɵtext(43, \"\\u2022 Click \\\"Create New Room\\\"\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(44, \"li\");\n            i0.ɵɵtext(45, \"\\u2022 Set your room name and preferences\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(46, \"li\");\n            i0.ɵɵtext(47, \"\\u2022 Share the 6-digit room code with friends\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(48, \"li\");\n            i0.ɵɵtext(49, \"\\u2022 Add AI players if needed\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(50, \"div\")(51, \"h3\", 15);\n            i0.ɵɵtext(52, \"Join a Game\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(53, \"ul\", 16)(54, \"li\");\n            i0.ɵɵtext(55, \"\\u2022 Click \\\"Join Existing Room\\\"\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(56, \"li\");\n            i0.ɵɵtext(57, \"\\u2022 Enter the 6-digit room code\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(58, \"li\");\n            i0.ɵɵtext(59, \"\\u2022 Wait for other players to join\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(60, \"li\");\n            i0.ɵɵtext(61, \"\\u2022 Start playing when everyone is ready\");\n            i0.ɵɵelementEnd()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.activeSession);\n          }\n        },\n        dependencies: [CommonModule, i3.NgIf],\n        encapsulation: 2\n      });\n    }\n  }\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}