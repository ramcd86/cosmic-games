{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GameApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    // Room state management\n    this.currentRoomSubject = new BehaviorSubject(null);\n    this.currentRoom$ = this.currentRoomSubject.asObservable();\n  }\n  /**\n   * Create a new game room\n   */\n  createRoom(request) {\n    return this.http.post(`${this.baseUrl}/api/rooms`, request);\n  }\n  /**\n   * Join an existing room\n   */\n  joinRoom(roomCode, request) {\n    return this.http.put(`${this.baseUrl}/api/rooms/${roomCode}/join`, request);\n  }\n  /**\n   * Get room details\n   */\n  getRoom(roomCode) {\n    return this.http.get(`${this.baseUrl}/api/rooms/${roomCode}`);\n  }\n  /**\n   * Leave current room\n   */\n  leaveRoom(roomCode) {\n    return this.http.delete(`${this.baseUrl}/api/rooms/${roomCode}/leave`);\n  }\n  /**\n   * Start a game\n   */\n  startGame(roomCode) {\n    return this.http.post(`${this.baseUrl}/api/games/${roomCode}/start`, {});\n  }\n  /**\n   * Make a game action\n   */\n  makeGameAction(roomCode, action) {\n    return this.http.post(`${this.baseUrl}/api/games/${roomCode}/action`, action);\n  }\n  /**\n   * Get current game state\n   */\n  getGameState(roomCode) {\n    return this.http.get(`${this.baseUrl}/api/games/${roomCode}/state`);\n  }\n  /**\n   * Update current room state\n   */\n  setCurrentRoom(room) {\n    this.currentRoomSubject.next(room);\n  }\n  /**\n   * Get current room state\n   */\n  getCurrentRoom() {\n    return this.currentRoomSubject.value;\n  }\n  static {\n    this.ɵfac = function GameApiService_Factory(t) {\n      return new (t || GameApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GameApiService,\n      factory: GameApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","environment","GameApiService","constructor","http","baseUrl","apiUrl","currentRoomSubject","currentRoom$","asObservable","createRoom","request","post","joinRoom","roomCode","put","getRoom","get","leaveRoom","delete","startGame","makeGameAction","action","getGameState","setCurrentRoom","room","next","getCurrentRoom","value","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\_dev\\cosmic-games\\frontend\\src\\app\\services\\game-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { \r\n  GameRoom, \r\n  CreateRoomRequest, \r\n  CreateRoomResponse, \r\n  JoinRoomRequest, \r\n  JoinRoomResponse,\r\n  ApiResponse \r\n} from '@cosmic-games/shared';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameApiService {\r\n  private readonly baseUrl = environment.apiUrl;\r\n  \r\n  // Room state management\r\n  private currentRoomSubject = new BehaviorSubject<GameRoom | null>(null);\r\n  public currentRoom$ = this.currentRoomSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Create a new game room\r\n   */\r\n  createRoom(request: CreateRoomRequest): Observable<ApiResponse<CreateRoomResponse>> {\r\n    return this.http.post<ApiResponse<CreateRoomResponse>>(`${this.baseUrl}/api/rooms`, request);\r\n  }\r\n\r\n  /**\r\n   * Join an existing room\r\n   */\r\n  joinRoom(roomCode: string, request: JoinRoomRequest): Observable<ApiResponse<JoinRoomResponse>> {\r\n    return this.http.put<ApiResponse<JoinRoomResponse>>(`${this.baseUrl}/api/rooms/${roomCode}/join`, request);\r\n  }\r\n\r\n  /**\r\n   * Get room details\r\n   */\r\n  getRoom(roomCode: string): Observable<ApiResponse<GameRoom>> {\r\n    return this.http.get<ApiResponse<GameRoom>>(`${this.baseUrl}/api/rooms/${roomCode}`);\r\n  }\r\n\r\n  /**\r\n   * Leave current room\r\n   */\r\n  leaveRoom(roomCode: string): Observable<ApiResponse> {\r\n    return this.http.delete<ApiResponse>(`${this.baseUrl}/api/rooms/${roomCode}/leave`);\r\n  }\r\n\r\n  /**\r\n   * Start a game\r\n   */\r\n  startGame(roomCode: string): Observable<ApiResponse<GameRoom>> {\r\n    return this.http.post<ApiResponse<GameRoom>>(`${this.baseUrl}/api/games/${roomCode}/start`, {});\r\n  }\r\n\r\n  /**\r\n   * Make a game action\r\n   */\r\n  makeGameAction(roomCode: string, action: any): Observable<ApiResponse> {\r\n    return this.http.post<ApiResponse>(`${this.baseUrl}/api/games/${roomCode}/action`, action);\r\n  }\r\n\r\n  /**\r\n   * Get current game state\r\n   */\r\n  getGameState(roomCode: string): Observable<ApiResponse> {\r\n    return this.http.get<ApiResponse>(`${this.baseUrl}/api/games/${roomCode}/state`);\r\n  }\r\n\r\n  /**\r\n   * Update current room state\r\n   */\r\n  setCurrentRoom(room: GameRoom | null): void {\r\n    this.currentRoomSubject.next(room);\r\n  }\r\n\r\n  /**\r\n   * Get current room state\r\n   */\r\n  getCurrentRoom(): GameRoom | null {\r\n    return this.currentRoomSubject.value;\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,eAAe,QAAQ,MAAM;AASlD,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANP,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;IAE7C;IACQ,KAAAC,kBAAkB,GAAG,IAAIP,eAAe,CAAkB,IAAI,CAAC;IAChE,KAAAQ,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;EAErB;EAEvC;;;EAGAC,UAAUA,CAACC,OAA0B;IACnC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAkC,GAAG,IAAI,CAACP,OAAO,YAAY,EAAEM,OAAO,CAAC;EAC9F;EAEA;;;EAGAE,QAAQA,CAACC,QAAgB,EAAEH,OAAwB;IACjD,OAAO,IAAI,CAACP,IAAI,CAACW,GAAG,CAAgC,GAAG,IAAI,CAACV,OAAO,cAAcS,QAAQ,OAAO,EAAEH,OAAO,CAAC;EAC5G;EAEA;;;EAGAK,OAAOA,CAACF,QAAgB;IACtB,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAwB,GAAG,IAAI,CAACZ,OAAO,cAAcS,QAAQ,EAAE,CAAC;EACtF;EAEA;;;EAGAI,SAASA,CAACJ,QAAgB;IACxB,OAAO,IAAI,CAACV,IAAI,CAACe,MAAM,CAAc,GAAG,IAAI,CAACd,OAAO,cAAcS,QAAQ,QAAQ,CAAC;EACrF;EAEA;;;EAGAM,SAASA,CAACN,QAAgB;IACxB,OAAO,IAAI,CAACV,IAAI,CAACQ,IAAI,CAAwB,GAAG,IAAI,CAACP,OAAO,cAAcS,QAAQ,QAAQ,EAAE,EAAE,CAAC;EACjG;EAEA;;;EAGAO,cAAcA,CAACP,QAAgB,EAAEQ,MAAW;IAC1C,OAAO,IAAI,CAAClB,IAAI,CAACQ,IAAI,CAAc,GAAG,IAAI,CAACP,OAAO,cAAcS,QAAQ,SAAS,EAAEQ,MAAM,CAAC;EAC5F;EAEA;;;EAGAC,YAAYA,CAACT,QAAgB;IAC3B,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAc,GAAG,IAAI,CAACZ,OAAO,cAAcS,QAAQ,QAAQ,CAAC;EAClF;EAEA;;;EAGAU,cAAcA,CAACC,IAAqB;IAClC,IAAI,CAAClB,kBAAkB,CAACmB,IAAI,CAACD,IAAI,CAAC;EACpC;EAEA;;;EAGAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACpB,kBAAkB,CAACqB,KAAK;EACtC;;;uBAtEW1B,cAAc,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAd9B,cAAc;MAAA+B,OAAA,EAAd/B,cAAc,CAAAgC,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}