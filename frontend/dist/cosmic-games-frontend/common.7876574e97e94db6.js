"use strict";(self.webpackChunkcosmic_games_frontend=self.webpackChunkcosmic_games_frontend||[]).push([[76],{1423:(i,o,e)=>{e.d(o,{k:()=>c});var a=e(4398),h=e(2706),n=e(690),u=e(2366);let c=(()=>{class s{constructor(t){this.http=t,this.baseUrl=h.c.apiUrl,this.currentRoomSubject=new a.t(null),this.currentRoom$=this.currentRoomSubject.asObservable()}createRoom(t){return this.http.post(`${this.baseUrl}/api/rooms`,t)}joinRoom(t,r){return this.http.put(`${this.baseUrl}/api/rooms/${t}/join`,r)}getRoom(t){return this.http.get(`${this.baseUrl}/api/rooms/${t}`)}leaveRoom(t){return this.http.delete(`${this.baseUrl}/api/rooms/${t}/leave`)}startGame(t){return this.http.post(`${this.baseUrl}/api/games/${t}/start`,{})}makeGameAction(t,r){return this.http.post(`${this.baseUrl}/api/games/${t}/action`,r)}getGameState(t){return this.http.get(`${this.baseUrl}/api/games/${t}/state`)}setCurrentRoom(t){this.currentRoomSubject.next(t)}getCurrentRoom(){return this.currentRoomSubject.value}static{this.\u0275fac=function(r){return new(r||s)(n.KVO(u.Qq))}}static{this.\u0275prov=n.jDH({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})()},2706:(i,o,e)=>{e.d(o,{c:()=>a});const a={production:!1,apiUrl:"http://localhost:3000"}}}]);